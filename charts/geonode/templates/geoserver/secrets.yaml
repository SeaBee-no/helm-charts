apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-geoserver-secrets
  namespace: {{ .Release.Namespace }}
stringData:
  notifier.xml: |
    <notificationConfiguration>
      <queueSize>1000</queueSize>
      <notificator>
        <queueSize>1000</queueSize>
        <processorThreads>1</processorThreads>
        <messageFilter>type='Catalog'</messageFilter>
        <genericProcessor>
          <geonodeEncoder />
          <topicSender>
            <username>{{ .Values.rabbitmq.auth.username }}</username>
            <password>{{ .Values.rabbitmq.auth.password }}</password>
            <host>{{ .Release.Name }}-rabbitmq</host>
            <port>5672</port>
            <virtualHost>/</virtualHost>
            <exchangeName>geonode</exchangeName>
            <routingKey>geoserver.catalog</routingKey>
          </topicSender>
        </genericProcessor>
      </notificator>
      <notificator>
        <queueSize>1000</queueSize>
        <processorThreads>10</processorThreads>
        <messageFilter>type='Data'</messageFilter>
        <genericProcessor>
          <geonodeEncoder />
          <topicSender>
            <username>{{ .Values.rabbitmq.auth.username }}</username>
            <password>{{ .Values.rabbitmq.auth.password }}</password>
            <host>{{ .Release.Name }}-rabbitmq</host>
            <port>5672</port>
            <virtualHost>/</virtualHost>
            <exchangeName>geonode</exchangeName>
            <routingKey>geoserver.data</routingKey>
          </topicSender>
        </genericProcessor>
      </notificator>
    </notificationConfiguration>
  config.xml: |
    <geoNodeOauth2Authentication>
      <id>-313f4319:15766e137c9:-8000</id>
      <name>geonode-oauth2</name>
      <className>org.geoserver.security.oauth2.GeoNodeOAuthAuthenticationFilter</className>
      <roleSource class="org.geoserver.security.config.PreAuthenticatedUserNameFilterConfig$PreAuthenticatedUserNameRoleSource">RoleService</roleSource>
      <userGroupServiceName>default</userGroupServiceName>
      <roleServiceName>geonode REST role service</roleServiceName>
      <cliendId>{{ .Values.geonode.extraEnvs.OAUTH2_CLIENT_ID }}</cliendId>
      <clientSecret>{{ .Values.geonode.extraEnvs.OAUTH2_CLIENT_SECRET }}</clientSecret>

      <!-- GeoNode accessTokenUri -->
      <accessTokenUri>http://{{ .Release.Name }}-geonode:80/o/token/</accessTokenUri>

      <!-- GeoNode userAuthorizationUri -->
      <userAuthorizationUri>{{ include "public_url" . }}/o/authorize/</userAuthorizationUri>

      <!-- GeoServer Public URL -->
      <redirectUri>{{ include "public_url" . }}/geoserver/index.html</redirectUri>

      <!-- GeoNode checkTokenEndpointUrl -->
      <checkTokenEndpointUrl>http://{{ .Release.Name }}-geonode:80/api/o/v4/tokeninfo/</checkTokenEndpointUrl>

      <!-- GeoNode logoutUri -->
      <logoutUri>{{ include "public_url" . }}/account/logout/</logoutUri>

      <scopes>write</scopes>
      <enableRedirectAuthenticationEntryPoint>false</enableRedirectAuthenticationEntryPoint>
      <forceAccessTokenUriHttps>false</forceAccessTokenUriHttps>
      <forceUserAuthorizationUriHttps>false</forceUserAuthorizationUriHttps>
      <loginEndpoint>/j_spring_oauth2_geonode_login</loginEndpoint>
      <logoutEndpoint>/j_spring_oauth2_geonode_logout</logoutEndpoint>
    </geoNodeOauth2Authentication>