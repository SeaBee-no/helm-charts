geonode:
  image:
    # -- Geonode image name
    name: geonode/geonode
    # -- Geonode image tag
    tag: "3.3.x"
  # -- Use this to pass any env to `geonode` container
  # See https://docs.geonode.org/en/master/basic/settings/index.html
  # @default -- Various default values, see `values.yaml`
  extraEnvs:
    OAUTH2_API_KEY: ""
    OAUTH2_CLIENT_ID: Jrewz2oPY3akmzndmgUTYrs9gczlgoV30YPSvqaV
    OAUTH2_CLIENT_SECRET: rNnp5txobUo83EpQEblM8fVj3QT5zb5qRfxNsuPzCqZaiRyIoxN4fdgMlZKFfePBHYXCLd7B8NlkfDBY9HKeIQPcy5Cp08KQNpRHQbjpLItDHv12GvkSeXp6OxaUETv3
    CLIENT_RESULTS_LIMIT: "25"
    SOCIALACCOUNT_WITH_GEONODE_LOCAL_SINGUP: "False"
    C_FORCE_ROOT: "1"
    # This allows geonode to expose some proxy URLs to whitelisted domains below. 'geoserver' is required to enable printing
    PROXY_ALLOWED_HOSTS: "localhost,django,geonode,geoserver,spatialreference.org,nominatim.openstreetmap.org,dev.openlayers.org"
    # Session/Access Control
    LOCKDOWN_GEONODE: "False"
    CORS_ORIGIN_ALLOW_ALL: "True"
    X_FRAME_OPTIONS: ALLOW-FROM ALL
    SESSION_EXPIRED_CONTROL_ENABLED: "True"
    DEFAULT_ANONYMOUS_VIEW_PERMISSION: "True"
    DEFAULT_ANONYMOUS_DOWNLOAD_PERMISSION: "True"
    # Users Registration
    ACCOUNT_EMAIL_REQUIRED: "True"
    ACCOUNT_APPROVAL_REQUIRED: "False"
    ACCOUNT_CONFIRM_EMAIL_ON_GET: "False"
    ACCOUNT_EMAIL_VERIFICATION: none
    ACCOUNT_EMAIL_CONFIRMATION_EMAIL: "False"
    ACCOUNT_EMAIL_CONFIRMATION_REQUIRED: "False"
    ACCOUNT_AUTHENTICATION_METHOD: username_email
    AUTO_ASSIGN_REGISTERED_MEMBERS_TO_REGISTERED_MEMBERS_GROUP_NAME: "True"
    # GeoNode APIs
    API_LOCKDOWN: "False"
    TASTYPIE_APIKEY:
    IS_FIRST_START: "True"
    FORCE_REINIT: "False"
    ASYNC_SIGNALS: "True"
  # -- Same as `extraEnvs` but passed as a secret
  extraSecretEnvs: {}
  # -- Configuration to append to `settings.py`
  # Can be used to configure new base maps or any other setting from https://github.com/GeoNode/geonode/blob/master/geonode/settings.py
  # For base maps available in MapStore, see https://github.com/geosolutions-it/MapStore2/blob/master/web/client/utils/ConfigProvider.js
  # @default -- Some standard base layers
  extraConf: |
    import ast
    import os
    try:  # python2
        from urlparse import urlparse, urlunparse, urlsplit, urljoin
    except ImportError:
        # Python 3 fallback
        from urllib.parse import urlparse, urlunparse, urlsplit, urljoin
    from geonode.settings import *
    EXTRA_BASE_LAYERS = [
      {
        "type": "tileprovider",
        "title": "OpenStreetMap Terrain",
        "thumbURL": "https://a.tile-cyclosm.openstreetmap.fr/cyclosm/10/594/518.png",
        "provider": "custom",
        "name": "cyclosm",
        "group": "background",
        "visibility": False,
        "url": "https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",
        "options": {
          "subdomains": [ "a", "b", "c" ]
        }
      }
    ]
    MAPSTORE_BASELAYERS =  EXTRA_BASE_LAYERS + MAPSTORE_BASELAYERS
  # -- Same as `extraConf` but can be overridden separately
  # @default -- Some OAuth settings
  extraConf2: |
    # Add provider
geoserver:
  image:
    # -- `geoserver` image name
    name: geonode/geoserver
    # -- `geoserver` image tag
    tag: "2.18.2"
  # -- List of custom ESPG definitions to add to Geoserver configuration - see https://docs.geoserver.org/stable/en/user/configuration/crshandling/customcrs.html
  # @default -- Various useful ESPGs
  # -- Password for GeoServer user `admin`
  password: geoserver1234
  customEPSGs:
    - 1=PROJCS["TM_Rwanda",GEOGCS["GCS_ITRF_2005",DATUM["D_ITRF_2005",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",5000000.0],PARAMETER["Central_Meridian",30.0],PARAMETER["Scale_Factor",0.9999],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]
  # -- Same as `customEPSGs` but can be overridden separately
  extraCustomEPSGs: []
general:
  # -- group id also used for fsgroup
  gid: 999
  uid: 999
  # -- Public domain used to access the application
  externalDomain: geonode.seabee.sigma2.no
  # -- Public-facing protocol used to access the application
  externalScheme: https
  # -- Public-facing port used to access the application
  externalPort: 443
  # -- activates various debug logs
  debug: true
  superUser:
    # -- Password for initial `admin` user - This user will have access to geonode UI but also the built-in Django admin interface (/admin)
    password: seabeegeonode
    # -- Email address for `admin` user
    email: support@example.com
    # NOTE: GEOSERVER ADMIN password must be changed manually https://docs.geonode.org/en/3.2.x/install/basic/index.html
  # -- Support email visible to users
  supportEmail: support@example.com
  # -- `ClusterIP` / `LoadBalancer` / `NodePort`
  serviceType: ClusterIP
smtp:
  # -- SMTP host name
  host: smtp.gmail.com
  # -- Use TLS?
  tls: true
  # -- SMTP port
  port: "587"
  # -- SMTP user
  user:
  # -- SMTP password
  password: "changemvsdvfve"
  # -- SMTP "from" address
  from:
storage:
  # -- claimName for persistent volume, needes to be readwritemany
  claimName: 71aea088-9e00-4f3c-adf7-0579fe1c38b8
  # -- create a new persistent volume claim, would not work on nird currently
  createClaim: false
  # -- storage class to use
  storageClass: standard
  # -- storage size
  storageSize: 1Gi
ingress:
  # -- Ingress enabled?
  enabled: true
  # -- Ingress annotations table
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # kubernetes.io/tls-acme: "true"
  secretName: wildcard-tls
postgresql:
  # -- Install Postgres? See See https://artifacthub.io/packages/helm/bitnami/postgresql for docs on all Postgres values
  enabled: true
  # -- Postgres database AND user name for geonode
  geonodeDb: geonode
  # -- Postgres database AND user name for geoserver
  geodataDb: geonode_data
  # -- Application password for both geonodeDb and geodataDb users
  password: Uxu3UhxFmKfsdmfgpkseg
  # TODO: support external db
  # For now we only support a db installed with a subchart
  # Standard postgres chart values
  # -- Password for 'postgres' user
  postgresqlPassword: adminnfsdklnfgklsd
  # -- Name of secret containing Postgres init script - will only be run on first deployment! Will be evaluated as a template
  initdbScriptsSecret: "{{ .Release.Name }}-postgres-init"
rabbitmq:
  auth:
    username: user
    # Override these!
    password: CHANGEMEkhk