{{- if .Values.postgresql.install -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql-headless
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.1.4
    app.kubernetes.io/instance: seabee
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
    role: primary
{{- else -}}
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-cloudsql-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cloudsql-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app.kubernetes.io/name: cloudsql-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - name: tcp-postgres
    port: 5432
    targetPort: tcp-postgresql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cloudsql-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cloudsql-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudsql-proxy
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudsql-proxy
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}-cloudsql-proxy
          command:
            - /cloud_sql_proxy
            - -enable_iam_login
            - -use_http_health_check
            - -credential_file=/secrets/service_account.json
            - -instances=seabee:europe-west1:seabee-postgres=tcp:0.0.0.0:5432
          image: gcr.io/cloudsql-docker/gce-proxy:1.26.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /liveness
              port: 8090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
          - name: tcp-postgresql
            containerPort: 5432
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readiness
              port: 8090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          securityContext:
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /startup
              port: 8090
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
          - mountPath: /secrets/
            name: cloudsql-proxy-volume
            readOnly: true
      volumes:
      - name: cloudsql-proxy-volume
        secret:
          defaultMode: 420
          secretName: cloudsql-proxy
{{ end }}